===========================
=== Bulldozer TODO List ===
===========================

* store: convert map if struct...
* End edit mode: timeout to get all peending event calls!
* text plugin: auto save content after timeout.
* a disconnected session in edit mode holding a store lock has to recheck if the lock is still there on reconnect!
* Add default groups (Admin, Dev,...) to the auth package and make them accessible in the template engine.
* Also check for the desired group in the topbar exec package!

IMPORTANT
=========
* Template parse: return an error if an ID for ex.: plugins is used multiple times! This is not allowed. Try testing this by declaring text plugins with the same ID.
* Add a bulldoze init hook for packages.
* Implement utils.SendMail and send the registration mail...
* bulldoze: don't initialize the project folder automatically. Implement a init command.
* Bulldozer.socket.send: clear the queue after a short timeout.
* Don't load scripts and javascripts twice if already added to the HTML head!
* Only show the utils.errorBox error code and 500 error template error message if the user is authenticated as developer.
* Search for old naming and replace it:
  -> grep -R "Bulldozer.core.loadPage" ./
  -> grep -R "Bulldozer.core.loadDefaultPage" ./
* Remove old removed $.DialogId...


STYLE
=====
* Hide the overflow on the body or page if the loading indicator is shown.
* Style the not found and error core template pages.
* Implement the unused errorbox.
* Add the description links to the noscript template: <a class="button">How to enable JS?</a><a class="button">What is JS?</a>


AUTHENTICATION
==============
* Add log messages if any user data is changed.
* Add template package calls or js methods to login, logout and register.
* Add an option to add a user without automatic deletion if not logged in and confirmed.
* Implement user confirmation over e-mail after registration.
* Include a notice, that a new registered user is removed after 2 days, if not logged in the first time.
* Change Password:
  - Don't allow to set the same password: old password != new password.
  - Match the password to following Regexp: Passwords must be at least 8 characters with 1 capital letter and 1 number
  - require to validate the old password first before changing...
  Implement:
  - https://tech.dropbox.com/2012/04/zxcvbn-realistic-password-strength-estimation/
  - https://github.com/dropbox/zxcvbn
* getUsers: Add an option to retrieve batched users. Don't return all at once!
* Check on registration, if the e-mail already exists.
* Is it possible to add for each user a custom salt to the db?
* Encrypt the password transmition of a new set password.


SECURITY
========
* Nginx no sniff headers in configuration.
* Implement better database password hash encryption.
* Set cookie max age to settings.Settings.SessionMaxAge if authenticated.
* Burteforce prevention for socket requests. Detect flooding...
* Clients with the same session cookie from different IPs and countries should be blocked!
* Set the secure cookie flag if the session is authenticated and if it is a https connection (Don't mix this up with nginx https)
* Make the cookie non persistant.
* Change session IDs on authentication.
* [Optional] Rotate sessions frequently to new ones and replace the old once (Delete session store?)
* [Optional] Set Cookie Path to restricted area


Session & Socket
=============
* If a session connects after serveral retries with a different socket type, then a endless loop occurres. This is currently fixed temporary, by disabling automatic fallback in the client javascript code.


General
=======
* Check if bulldoze is rebuilding the app if a directory is removed from the source folder.
* Add the site administrators e-mail to the error page.
* Add a bulldoze parameter to manually copy desired core templates to the project folder, so they can be edited.
* Log sass build errors to a gui page...
* Do some performance testing to check for bottlenecks (session store?)



BULLDOZE
========
* Also create a .gitignore during project initialization.


Features
========
* Reload dialog templates automatically on file changes if loaded with dialog.ParseFile.
* Add optional arg to template.Glob to load recursive templates.
* Add a template js load which does not wait for the socket connection?