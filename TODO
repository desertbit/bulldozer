===========================
=== Bulldozer TODO List ===
===========================

* topbar: If not in editmode access group, then deactivate the menu completly.
* Make the template events accessible from other templates through a special template syntax: @templatename.FuncName...?
* Remove the template must calls and implement middleware on the go side. If this is done, remove the session navigate goroutine and then also remove the time sleep in the registration event.
* html minifier
* Server database backups
* Add default groups (Admin, Dev,...) to the auth package and make them accessible in the template engine.
* Also check for the desired group in the topbar exec package!
* CaptchaCode
* NGINX serve bulldozer files also
* Implement control panel categories.
* maybe optimize (controlpanel route page) and reduce the auth get user to context call to one single call. If a user is already obtained, then pass it to the next template execution call....
* Only add template script exec load if there is a script tag in the current executed template.... Be careful. If there is no more script which executes the execJsLoad function then the loading indicator won't be hidden.
* SOmetimes the Session ID seams to not be pushed to the session database on restart?!
- Bulldoze: process wait does not really wait for the process to exit?


Rules: Don't forget to wrap the template emit calls in if checks, if access should be limited. maybe also check on server side event execution for access rights...


IMPORTANT
=========
* auth: implement limits and ranges for getters.
* Implement a database migration tool.
* Compress the svg logo and replace it by an own logo.
* Template events map. Remove some overhead by reducing it to one single map.
* Implement mux redirect route method. Then also add a redirect in the control panel package.
* Implement detection if the tab is in the background. If so, disconnect the websocket after a specific timeout: https://developer.mozilla.org/en-US/docs/Web/Guide/User_experience/Using_the_Page_Visibility_API
* Detect prerendering/prefetching: http://stackoverflow.com/questions/9852257/http-header-to-detect-a-preload-request-by-google-chrome
* implement discard option in edit mode.
* store: convert map if struct... Provide a function for this.s
* Edit mode: If multiple users are in edit mode, ask all other sessions before save, to confirm save.
* editmode: don't update sessions with changes if the changes happened on different pages.
* Implement store backup.
* Template parse: return an error if an ID for ex.: plugins is used multiple times! This is not allowed. Try testing this by declaring text plugins with the same ID.
* Add a bulldoze init hook for packages.
* Implement utils.SendMail and send the registration mail...
* bulldoze: don't initialize the project folder automatically. Implement a init command.
* Bulldozer.socket.send: clear the queue after a short timeout.
* Only show the utils.errorBox error code and 500 error template error message if the user is authenticated as developer. Check if there are error messages that should be shown to all clients...
* Search for old naming and replace it:
  -> grep -R "Bulldozer.core.loadPage" ./
  -> grep -R "Bulldozer.core.loadDefaultPage" ./
* Remove old removed $.DialogId...
* editable popovers: make the popover styles non changeable from the project styles.
* Kepler modal no scrollbars bug: open the imprint dialog, close it, save changes and reopen the imrpint dialog. the scrollbars are gone.
* Set a flag on application shutdown to not perform any new request from any session!.
* own kepler namespace for bulldozer only.


Bugs
====
- Check the core.js bulldozer ready hook event. The execJSLoad function is executed, but isn't this handled by the loadJS call?



IMPROVEMENT
===========
- https://developers.google.com/speed/docs/insights/rules
- http://seositecheckup.com/


STYLE
=====
* If the topbar is shown, then there is always a vertical scrollbar visible.
* Add svg logo fallback to png image.
* Hide the overflow on the body or page if the loading indicator is shown.
* Style the not found and error core template pages.
* Implement the unused errorbox.
* Add the description links to the noscript template: <a class="button">How to enable JS?</a><a class="button">What is JS?</a>


AUTHENTICATION
==============
* Add log messages if any user data is changed.
* Add template package calls or js methods to login, logout and register.
* Add an option to add a user without automatic deletion if not logged in and confirmed.
* Implement user confirmation over e-mail after registration.
* Include a notice, that a new registered user is removed after 2 days, if not logged in the first time.
* Change Password:
  - Don't allow to set the same password: old password != new password.
  - Match the password to following Regexp: Passwords must be at least 8 characters with 1 capital letter and 1 number
  - require to validate the old password first before changing...
  Implement:
  - https://tech.dropbox.com/2012/04/zxcvbn-realistic-password-strength-estimation/
  - https://github.com/dropbox/zxcvbn
* getUsers: Add an option to retrieve batched users. Don't return all at once!
* Check on registration, if the e-mail already exists.
* Is it possible to add for each user a custom salt to the db?
* Encrypt the password transmition of a new set password.


SECURITY
========
* Authentication: create a match regexp for usernames and e-mails.
* Nginx no sniff headers in configuration.
* Implement better database password hash encryption.
* Set cookie max age to settings.Settings.SessionMaxAge if authenticated.
* Burteforce prevention for socket requests. Detect flooding...
* Clients with the same session cookie from different IPs and countries should be blocked!
* Set the secure cookie flag if the session is authenticated and if it is a https connection (Don't mix this up with nginx https)
* Make the cookie non persistant.
* Change session IDs on authentication.
* [Optional] Rotate sessions frequently to new ones and replace the old once (Delete session store?)
* [Optional] Set Cookie Path to restricted area
* [Optional] Release the dialog contexts if the dialog is closed.


Session & Socket
=============
* If a session connects after serveral retries with a different socket type, then a endless loop occurres. This is currently fixed temporary, by disabling automatic fallback in the client javascript code.


Database
========
* Database migration with version number...


General
=======
* The template engine uses internally hardcoded {{ and }} delimiters. Make them dynamic and use the set template's delimiters. (parseEmit(),...)
* Don't print plugin warnings if no event functions are present.
* Check if the browser is supported.
* Check for not more used and old store values. (Deleted IDs...)
* Check if bulldoze is rebuilding the app if a directory is removed from the source folder.
* Add the site administrators e-mail to the error page.
* Add a bulldoze parameter to manually copy desired core templates to the project folder, so they can be edited.
* Log sass build errors to a gui page...
* Do some performance testing to check for bottlenecks (session store?)
* logging: add an option to log to a file.



BULLDOZE
========
* Also create a .gitignore during project initialization.


Features
========
* Move automatic created files (compiled SASS files) to a separate directory, not in the project folder. This way, we could make the complete project folder read-only in production mode.
* Reload dialog templates automatically on file changes if loaded with dialog.ParseFile.
* Add optional arg to template.Glob to load recursive templates.
* Add a template js load which does not wait for the socket connection?