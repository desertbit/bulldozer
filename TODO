- Style the noscript tag in the body template
- Webcrawler support
- Implement a complex router and replace it with the current temporary fix
- Load a config in the Init() method if the file exists and the ENV is set
- Store the ip location for each session and implement session cookie stealing prevention, by checking the country...
- Set the secure cookie flag if the session is authenticated and if it is a https connection (Don't mix this up with nginx https)
- bruteforce attack prevention from the same ip address (Session ID bruteforce attack...)
- log an analyse clients connecting to a session. To many clients or from different IPs should be blocked...
- nginx no sniff headers,...
- Do some performance testing to check for bottlenecks (session store?)


Burteforce prevention for socket requests. detect flooding

Rotate sessions frrequently to new ones and replace the old once (Delete session store?)
Set Cookie Path to restricted area
Make the cookie non persistant!
Change session IDs on authentication. Also use strict auth mode bind to the socket.
Don't allow different socket types for the same session

Add session level based timeouts
Update store timeouts of session after a frequent time if the session is still connected


Set cookie max age to settings.Settings.SessionMaxAge if authenticated


- Implement better password hash encryption